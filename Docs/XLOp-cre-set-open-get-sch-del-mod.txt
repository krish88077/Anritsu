using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Office.Interop.Excel;
using Excel = Microsoft.Office.Interop.Excel;
using Microsoft.Office.Core;
using System.IO;

namespace excel5
{
    class Program
    {
        static void Main(string[] args)
        {

            /****************Create application**********************/
            int choice, row = 2;
            Workbook wb;
            Worksheet ws;
            Microsoft.Office.Interop.Excel.Application prac = new Microsoft.Office.Interop.Excel.Application();
            if (prac == null)
            {
                Console.WriteLine("Excel cant be started...");
                return;
            }

            if (!System.IO.File.Exists(@"E:\Database.xlsx"))
            {

                 wb = prac.Workbooks.Add(XlWBATemplate.xlWBATWorksheet);
                 ws = (Worksheet)wb.Worksheets[1];
                
                /**************Set sheet designs************************/
                 ws.Cells[1, 1].Value2 = "Username";
                 ws.Cells[1, 2].Value2 = "Name";
                 ws.Cells[1, 3].Value2 = "Password";
                 ws.Cells[1, 4].Value2 = "Age";
                 ws.Cells[1, 5].Value2 = "Contact";
                 ws.Cells[1, 6].Value2 = "MID";
                 ws.get_Range("A1", "F1").Font.Bold = true;
                 ws.get_Range("A2", "z100").Font.Italic = true;
                 ws.get_Range("A1", "F1").HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                 ws.Cells[1, 1].ColumnWidth = 20;
                 ws.Cells[1, 2].ColumnWidth = 20;
                 ws.Cells[1, 3].ColumnWidth = 15;
                 ws.Cells[1, 4].ColumnWidth = 5;
                 ws.Cells[1, 5].ColumnWidth = 15;
                 ws.Cells[1, 6].ColumnWidth = 5;
                 //ws.Cells[1, 6].RowHeight = 25;
                 ws.Rows.RowHeight = 20;
            }
            else
            {
                prac.Visible = true;
                wb = prac.Workbooks.Add(@"E:\Database.xlsx");
                ws = (Excel.Worksheet)wb.Worksheets[1];
                ((Excel.Worksheet)wb.Sheets["Sheet1"]).Activate();
                ws = (Excel.Worksheet)wb.ActiveSheet;


                 /***************Open existing file and read***********************/

                 string Path = @"E:\Database.xlsx";
                 Excel.Application app = new Application();
                 Excel.Workbook workbook = app.Workbooks.Open(Path, 0, true, 5, "", "", true, Excel.XlPlatform.xlWindows, "\t", false, false, 0, true, 1, 0);

                 Excel.Worksheet workSheet = (Excel.Worksheet)workbook.ActiveSheet;
                 workSheet = (Excel.Worksheet)wb.Worksheets[1];
                 ((Excel.Worksheet)wb.Sheets["Sheet1"]).Activate();
                 workSheet = (Excel.Worksheet)wb.ActiveSheet;


                 int serial_num = 1;
                 int rowIndex = 2;

                 if (((Excel.Range)workSheet.Cells[rowIndex, 1]).Value2 != null)
                     Console.WriteLine("USER     Username, Name, Password, Age, Mobno, MID");

                 while (((Excel.Range)workSheet.Cells[rowIndex, 1]).Value2 != null)
                 {
                     string Username = ((Excel.Range)workSheet.Cells[rowIndex, 1]).Value2.ToString();
                     string Name = ((Excel.Range)workSheet.Cells[rowIndex, 2]).Value2.ToString();
                     string Password = ((Excel.Range)workSheet.Cells[rowIndex, 3]).Value2.ToString();
                     string Age = ((Excel.Range)workSheet.Cells[rowIndex, 4]).Value2.ToString();
                     string Mobno = ((Excel.Range)workSheet.Cells[rowIndex, 5]).Value2.ToString();
                     string MID = ((Excel.Range)workSheet.Cells[rowIndex, 6]).Value2.ToString();

                     Console.WriteLine(" {0} : {1}  ,{2}  ,{3}  ,{4}  ,{5}, {6} ", serial_num, Username, Name, Password, Age, Mobno, MID);
                     serial_num++;
                     rowIndex++;
                 } 
            }
                
                if (ws == null)
                {
                    Console.WriteLine("worksheet cant be started...");
                    return;
                }
            


                    /****************Get user details**(append)********************/
                     int count=2;
                     if (((Excel.Range)ws.Cells[2, 1]).Value2 != null)
                     while ((wb.Sheets["sheet1"].Cells[count, 1]).Value2 != null)
                    {
                         count++;
                    } 
                    row = count;
                    do
                    {
                        Console.WriteLine("Enter username");
                        ws.Cells[row, 1].Value2 = Console.ReadLine();
                        Console.WriteLine("Enter name");
                        ws.Cells[row, 2].Value2 = Console.ReadLine();
                        Console.WriteLine("Enter password");
                        ws.Cells[row, 3].Value2 = Console.ReadLine();
                        Console.WriteLine("Enter age");
                        ws.Cells[row, 4].Value2 = Console.ReadLine();
                        Console.WriteLine("Enter mobileno");
                        ws.Cells[row, 5].Value2 = Console.ReadLine();
                        Console.WriteLine("Enter mId");
                        ws.Cells[row, 6].Value2 = Console.ReadLine();
                        ws.Cells[row, 1].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        ws.Cells[row, 2].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        ws.Cells[row, 3].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        ws.Cells[row, 4].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        ws.Cells[row, 5].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        ws.Cells[row, 6].HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                        row++;
                        Console.WriteLine((count-1) + " user added..\nPress 1 to add user or Press 2 to save...");
                        choice = Convert.ToInt32(Console.ReadLine());
                        Console.Clear();
                    } while (choice == 1);

                    wb.SaveAs(@"E:\Database.xlsx", Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, XlSaveAsAccessMode.xlExclusive, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);
                    //prac.ActiveWorkbook.Save();


                    /****************Search and delete entry********************/

                    Console.WriteLine("Enter name to search");
                    string searchName = Console.ReadLine();
                    row = 2;
                    for (int search = 1; search <= count; search++)
                    {
                        if (ws.Cells[row, 1].Value2 == searchName)
                        {
                            Console.WriteLine("User Exists");
                            Console.WriteLine("USER     Username, Name, Password, Age, Mobno, MID");
                            for (int s = 1; s <= 6; s++)
                            {

                                Console.Write(ws.Cells[row, s].Value2 + "   ");
                            }
                            Console.WriteLine("\nDelete? press 1...");
                            int y = Convert.ToInt32(Console.ReadLine());
                            //row = 2;
                             int x = 2;
                            if (y == 1)
                            {

                                bool found = true;
                                foreach (Excel.Worksheet sheet in wb.Sheets)
                                {
                                    // Check the name of the current sheet
                                    if (sheet.Name == "Deleted entries")
                                    {
                                        found = false;
                                        break; // Exit the loop now
                                    }
                                }
                                if (found)
                                {
                                    Microsoft.Office.Interop.Excel.Worksheet ws2 =
                                               (Microsoft.Office.Interop.Excel.Worksheet)wb.Sheets.Add();
                                    ws2.Name = "Deleted entries";


                                    ws2.Cells[1, 1].Value2 = "Username";
                                    ws2.Cells[1, 2].Value2 = "Name";
                                    ws2.Cells[1, 3].Value2 = "Password";
                                    ws2.Cells[1, 4].Value2 = "Age";
                                    ws2.Cells[1, 5].Value2 = "Contact";
                                    ws2.Cells[1, 6].Value2 = "MID";
                                    ws2.get_Range("A1", "F1").Font.Bold = true;
                                    ws2.get_Range("A2", "z100").Font.Italic = true;
                                    ws2.get_Range("A1", "F1").HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                                    ws2.Cells[1, 1].ColumnWidth = 20;
                                    ws2.Cells[1, 2].ColumnWidth = 20;
                                    ws2.Cells[1, 3].ColumnWidth = 15;
                                    ws2.Cells[1, 4].ColumnWidth = 5;
                                    ws2.Cells[1, 5].ColumnWidth = 15;
                                    ws2.Cells[1, 6].ColumnWidth = 5;
                                    //ws2.Cells[1, 6].RowHeight = 25;
                                    ws2.Rows.RowHeight = 20;
                                }

                                while ((wb.Sheets["Deleted entries"].Cells[x, 1]).Value2 != null)
                                {
                                    x++;
                                }

                                Excel.Range from = ws.Rows[row, Type.Missing];
                                Excel.Range to = wb.Sheets["Deleted entries"].Rows[x, Type.Missing];
                                from.Copy(to);
         
                                Excel.Range range;
                                // range = (Excel.Range)ws.Application.Rows[row, Type.Missing];
                                range = wb.Sheets["sheet1"].Rows[row, Type.Missing];
                                //range.Select();
                                range.Delete(Excel.XlDirection.xlUp);

                            }
                            //wb.SaveAs(@"E:\Database.xlsx", Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, XlSaveAsAccessMode.xlExclusive, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);
                            prac.ActiveWorkbook.Save();
                            //prac.Quit();
                            break;
                        }
                        row++;
                    }    
        }
    }
}




